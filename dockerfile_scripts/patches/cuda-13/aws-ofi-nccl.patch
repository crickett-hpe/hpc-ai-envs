diff --git a/src/nccl_ofi_cuda.cpp b/src/nccl_ofi_cuda.cpp
index 17c0f90..dfb2d8e 100644
--- a/src/nccl_ofi_cuda.cpp
+++ b/src/nccl_ofi_cuda.cpp
@@ -20,7 +20,7 @@
 	do {                                                                                                            \
 		enum cudaDriverEntryPointQueryResult result;                                                            \
 		cudaError_t err =                                                                                       \
-			cudaGetDriverEntryPoint(QUOTE(function), (void **)&pfn_##function, cudaEnableDefault, &result); \
+			cudaGetDriverEntryPointByVersion(QUOTE(function), (void **)&pfn_##function, 13, cudaEnableDefault, &result); \
 		if (err != cudaSuccess) {                                                                               \
 			switch (result) {                                                                               \
 			case cudaDriverEntryPointSymbolNotFound:                                                        \
@@ -37,8 +37,8 @@
 		}                                                                                                       \
 	} while (0);
 
-DECLARE_CUDA_FUNCTION(cuCtxGetDevice);
-DECLARE_CUDA_FUNCTION(cuDeviceGetAttribute);
+DECLARE_CUDA_FUNCTION(cuCtxGetDevice_v2000);
+DECLARE_CUDA_FUNCTION(cuDeviceGetAttribute_v2000);
 
 int nccl_net_ofi_cuda_init(void)
 {
@@ -66,8 +66,8 @@ int nccl_net_ofi_cuda_init(void)
 	              driverVersion,
 	              runtimeVersion);
 
-	RESOLVE_CUDA_FUNCTION(cuCtxGetDevice);
-	RESOLVE_CUDA_FUNCTION(cuDeviceGetAttribute);
+	RESOLVE_CUDA_FUNCTION(cuCtxGetDevice_v2000);
+	RESOLVE_CUDA_FUNCTION(cuDeviceGetAttribute_v2000);
 
 	if (HAVE_CUDA_GDRFLUSH_SUPPORT && nccl_net_ofi_cuda_have_gdr_support_attr() && ofi_nccl_cuda_flush_enable()) {
 		NCCL_OFI_WARN("CUDA flush enabled");
@@ -132,23 +132,23 @@ int nccl_net_ofi_get_cuda_device_for_addr(void *data, int *dev_id)
 bool nccl_net_ofi_cuda_have_gdr_support_attr(void)
 {
 #if HAVE_CUDA_GDRFLUSH_SUPPORT
-	if (pfn_cuCtxGetDevice == NULL || pfn_cuDeviceGetAttribute == NULL) {
+	if (pfn_cuCtxGetDevice_v2000 == NULL || pfn_cuDeviceGetAttribute_v2000 == NULL) {
 		return false;
 	}
 
 	CUdevice dev;
-	CUresult result = pfn_cuCtxGetDevice(&dev);
+	CUresult result = pfn_cuCtxGetDevice_v2000(&dev);
 	if (result != CUDA_SUCCESS) {
 		return false;
 	}
 
 	int supported;
-	result = pfn_cuDeviceGetAttribute(&supported, CU_DEVICE_ATTRIBUTE_GPU_DIRECT_RDMA_SUPPORTED, dev);
+	result = pfn_cuDeviceGetAttribute_v2000(&supported, CU_DEVICE_ATTRIBUTE_GPU_DIRECT_RDMA_SUPPORTED, dev);
 	if (result != CUDA_SUCCESS || !((bool)supported)) {
 		return false;
 	}
 
-	result = pfn_cuDeviceGetAttribute(&supported, CU_DEVICE_ATTRIBUTE_GPU_DIRECT_RDMA_FLUSH_WRITES_OPTIONS, dev);
+	result = pfn_cuDeviceGetAttribute_v2000(&supported, CU_DEVICE_ATTRIBUTE_GPU_DIRECT_RDMA_FLUSH_WRITES_OPTIONS, dev);
 	return result == CUDA_SUCCESS && ((supported & CU_FLUSH_GPU_DIRECT_RDMA_WRITES_OPTION_HOST) != 0);
 #else
 	return false;
@@ -159,18 +159,18 @@ bool nccl_net_ofi_cuda_have_dma_buf_attr(void)
 {
 #if HAVE_CUDA_DMABUF_SUPPORT
 	static_assert(CUDA_VERSION >= 11070, "Requires cudart>=11.7");
-	if (pfn_cuCtxGetDevice == NULL || pfn_cuDeviceGetAttribute == NULL) {
+	if (pfn_cuCtxGetDevice_v2000 == NULL || pfn_cuDeviceGetAttribute_v2000 == NULL) {
 		return false;
 	}
 
 	CUdevice dev;
-	CUresult result = pfn_cuCtxGetDevice(&dev);
+	CUresult result = pfn_cuCtxGetDevice_v2000(&dev);
 	if (result != CUDA_SUCCESS) {
 		return false;
 	}
 
 	int supported;
-	result = pfn_cuDeviceGetAttribute(&supported, CU_DEVICE_ATTRIBUTE_DMA_BUF_SUPPORTED, dev);
+	result = pfn_cuDeviceGetAttribute_v2000(&supported, CU_DEVICE_ATTRIBUTE_DMA_BUF_SUPPORTED, dev);
 	if (result != CUDA_SUCCESS) {
 		return false;
 	}
